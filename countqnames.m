function countqnames
%% Function written by Eleni Christoforidou in MATLAB R2019b

%This function counts how many times each mapped read mapped to the
%reference genome.

%NOTE: The functions "flag_analysis" and "qname_analysis" must be run 
%beforehand, to generate the appropriate variables to be used in the 
%current function.

%Run this function from inside the folder containing subfolders with the 
%MAT files generated by the above functions.

%INPUT ARGUMENTS: None.

%OUTPUT ARGUMENTS: None, but the following variables are appended
%to each "qname_analysis.mat" file:
%(1)'mappedQNAMEs':     A 1 x N cell array of QNAMEs that mapped, in the
%                       same order as they appear in the SAM file. N is
%                       equal to the number of mappings (may contain
%                       duplicates).
%(2)'unmappedQNAMEs':   A 1 x N cell array of QNAMEs that did not map, in
%                       the same order as they appear in the SAM file. N is
%                       equal to the number of unmapped reads.
%(3)'unique_mapped':    A 1 x N cell array of QNAMEs that mapped, in the
%                       same order as they appear in the SAM file. N is
%                       equal to the number of mapped reads (no
%                       duplicates).
%(4)'occurrences':      An M x 1 matrix of integers, where M is equal to 
%                       the number of unique mapped QNAMEs in the SAM file.
%                       Each element is equal to the number of times the
%                       corresponding QNAME in the variable 'unique_mapped'
%                       is present in the 'mappedQNAMEs' variable.
%(5)'counts':           A M x 2 matrix of integers. The first column shows
%                       the number of times each unique QNAME mapped. The
%                       second column shows how many unique QNAMEs mapped
%                       the corresponding times.

%%
%Find MAT files to work with.
D=dir('*/flag_analysis.mat'); %get list of MAT files in subfolders.
d=length(D); %number of MAT files found.
fprintf('%d MAT files found.\n',d) %inform user.
wd=cd; %save working directory.

for f=1:d %loop through each MAT file.
    cd(D(f).folder); %navigate to folder containing MAT file.
    fprintf('Working on file %d of %d\n',f,d) %inform user of progress.
    load('flag_analysis.mat','flags');
    load('qname_analysis.mat','qnames');
    
    mappedQNAMEs=qnames(flags~=4); %list of QNAMEs that mapped.
    unmappedQNAMEs=qnames(flags==4); %list of QNAMEs that did not map.
    clear flags qnames;
    
    [unique_mapped,~,count]=unique(mappedQNAMEs,'stable'); %store QNAMES in the variable "unique_qnames" without duplicates, in the same order they appear in the variable "mappedQNAMEs".
    occurrences=histc(count,1:numel(unique_mapped)); %get number of occurrences of each unique mapped QNAME, in the same order they appear in the variable "mappedQNAMEs".
    numbers=unique(occurrences); %get a sorted list of unique elements in the "numbers" variable.
    counts=zeros(numel(numbers),2); %initialise variable.
    counts(:,1)=numbers; %column 1 is the number of mappings.
    for n=1:length(numbers)
        hits=occurrences==numbers(n);
        hits=sum(hits);
        counts(n,2)=hits; %save the number of mapped QNAMES next to the number of times they mapped.
    end
    
    save('qname_analysis.mat','mappedQNAMEs','unmappedQNAMEs','unique_mapped','occurrences','counts','-append'); %save the variables.
    clearvars -except D d wd;
    cd(wd); %return to working directory for next iteration of for-loop.
end
clear
end