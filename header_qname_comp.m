function header_qname_comp
%% Function written by Eleni Christoforidou in MATLAB 2019b.

%This function checks how many entries in a SAM file generated by
%guppy_aligner are NOT present in the origin FASTQ file. Multiple SAM files
%are checked at once.

%NOTE: The custom functions "fastq_analysis" and "fastq_headers" must be run
%beforehand (in any order) in order to generate the variables that the
%current function needs to use.

%Run this function from inside the folder containing the subfolders with
%the MAT files generated by the above functions.

%INPUT ARGUMENTS: None.

%OUTPUT ARGUMENTS:
%None, but the following variables are saved in a MAT file called
%"header_qname_comp.mat", in each subfolder of the working directory:
%(1)missing:      A 1 x N cell array, where N is equal to the number of 
%                 Headers that are found in the FASTQ file but not in the
%                 SAM file. Each element is the character array of the
%                 Header.
%(2)num_missing:  A scalar representing the total number of Headers that
%                 are found in the FASTQ file but not in the SAM file.

%% 
%Find MAT files to work with.
D=dir('*/fastq_analysis.mat'); %get list of MAT files in subfolders.
d=length(D); %number of MAT files found.
fprintf('%d files found.\n',d) %inform user.
wd=cd; %save working directory.

for f=1:d %loop through each MAT file.
    fprintf('Working on file %d of %d\n',f,d); %inform user of progress.
    cd(D(f).folder); %navigate to folder containing MAT file.
    load('fastq_analysis.mat','fastq_headers') %load the array of Headers from the FASTQ file.
    load('qname_analysis.mat','unique_qnames') %load the array of unique Query Names from the SAM file.
    missing=fastq_headers(~ismember(fastq_headers,unique_qnames)); %get entries that are missing from the SAM file.
    num_missing=length(missing); %get total number of Headers that are missing from the SAM file.
    
    save('header_qname_comp.mat','missing','num_missing'); %save results.    
    cd(wd); %return to working directory for next iteration of for-loop.
end
clear
end